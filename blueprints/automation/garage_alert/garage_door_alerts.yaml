blueprint:
  name: Garage Door Open Alerts (Custom Messages + Close Button)
  description: >
    Sends friendly mobile notifications and/or Alexa announcements when a garage
    door opens, with follow-up reminders if it stays open. Includes a button to
    close the door from the notification. Works with two or more doors.
  domain: automation
  input:
    garage_door_sensors:
      name: Garage Door Sensors
      description: Binary sensors for doors (state 'on' means open)
      selector:
        entity:
          multiple: true
          domain: binary_sensor

    garage_door_covers:
      name: Matching Cover Entities
      description: Covers for each sensor, in the same order
      selector:
        entity:
          multiple: true
          domain: cover

    mobile_device:
      name: Phone to notify
      description: Device from the mobile_app integration
      selector:
        device:
          integration: mobile_app

    alexa_target:
      name: Alexa Device
      description: Alexa media_player entity for announcements (e.g., media_player.kitchen)
      selector:
        entity:
          domain: media_player

    # Custom titles & messages (templates allowed: {{ door_name }}, {{ first_delay }}, {{ second_delay }})
    title_initial:
      name: Initial alert title
      default: "üö™ Garage Alert"
      selector:
        text:
    msg_initial:
      name: Initial alert message
      default: "Hey! {{ door_name }} was just opened."
      selector:
        text:

    title_first:
      name: First reminder title
      default: "‚è±Ô∏è Garage Reminder"
      selector:
        text:
    msg_first:
      name: First reminder message
      default: "Heads up! {{ door_name }} has been open for {{ first_delay }} minutes."
      selector:
        text:

    title_second:
      name: Second reminder title
      default: "‚åõ Garage Still Open"
      selector:
        text:
    msg_second:
      name: Second reminder message
      default: "FYI ‚Äî {{ door_name }} has been open for {{ second_delay }} minutes."
      selector:
        text:

    close_button_label:
      name: Button label
      default: "Close {{ door_name }}"
      selector:
        text:

    # Per-incident channel toggles
    send_initial_phone:
      name: Initial alert ‚Üí Phone
      default: true
      selector:
        boolean:
    send_initial_alexa:
      name: Initial alert ‚Üí Alexa
      default: true
      selector:
        boolean:
    send_first_phone:
      name: First reminder ‚Üí Phone
      default: true
      selector:
        boolean:
    send_first_alexa:
      name: First reminder ‚Üí Alexa
      default: true
      selector:
        boolean:
    send_second_phone:
      name: Second reminder ‚Üí Phone
      default: true
      selector:
        boolean:
    send_second_alexa:
      name: Second reminder ‚Üí Alexa
      default: true
      selector:
        boolean:

    # Timers
    first_delay_minutes:
      name: First reminder after (minutes)
      default: 10
      selector:
        number:
          min: 1
          max: 120
          mode: slider
          unit_of_measurement: minutes

    second_delay_minutes:
      name: Second reminder after (minutes total)
      default: 60
      selector:
        number:
          min: 2
          max: 240
          mode: slider
          unit_of_measurement: minutes

variables:
  sensor_list: !input garage_door_sensors
  cover_list: !input garage_door_covers
  cover_map: "{{ dict(zip(sensor_list, cover_list)) }}"

  first_delay: !input first_delay_minutes
  second_delay: !input second_delay_minutes

  send_initial_phone: !input send_initial_phone
  send_initial_alexa: !input send_initial_alexa
  send_first_phone: !input send_first_phone
  send_first_alexa: !input send_first_alexa
  send_second_phone: !input send_second_phone
  send_second_alexa: !input send_second_alexa

  title_initial: !input title_initial
  msg_initial: !input msg_initial
  title_first: !input title_first
  msg_first: !input msg_first
  title_second: !input title_second
  msg_second: !input msg_second
  close_button_label: !input close_button_label

trigger:
  - platform: state
    entity_id: !input garage_door_sensors
    from: 'off'
    to: 'on'

mode: parallel
max: 10

action:
  - variables:
      door_sensor: "{{ trigger.entity_id }}"
      door_name: "{{ state_attr(trigger.entity_id, 'friendly_name') or trigger.to_state.name }}"
      door_cover: "{{ cover_map[trigger.entity_id] }}"

  # Initial alert
  - parallel:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ send_initial_phone }}"
            sequence:
              - device_id: !input mobile_device
                domain: mobile_app
                type: notify
                title: "{{ title_initial }}"
                message: "{{ msg_initial }}"
                data:
                  actions:
                    - action: "CLOSE_{{ door_sensor }}"
                      title: "{{ close_button_label }}"
        default: []

      - choose:
          - conditions:
              - condition: template
                value_template: "{{ send_initial_alexa }}"
            sequence:
              - service: notify.alexa_media
                data:
                  target: !input alexa_target
                  message: "{{ msg_initial }}"
                  data:
                    type: announce
        default: []

  # First reminder
  - delay: "{{ (first_delay | int) * 60 }}"
  - condition: template
    value_template: "{{ is_state(door_sensor, 'on') }}"
  - parallel:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ send_first_phone }}"
            sequence:
              - device_id: !input mobile_device
                domain: mobile_app
                type: notify
                title: "{{ title_first }}"
                message: "{{ msg_first }}"
                data:
                  actions:
                    - action: "CLOSE_{{ door_sensor }}"
                      title: "{{ close_button_label }}"
        default: []

      - choose:
          - conditions:
              - condition: template
                value_template: "{{ send_first_alexa }}"
            sequence:
              - service: notify.alexa_media
                data:
                  target: !input alexa_target
                  message: "{{ msg_first }}"
                  data:
                    type: announce
        default: []

  # Second reminder (total time = second_delay)
  - variables:
      remaining_minutes: "{{ max((second_delay | int) - (first_delay | int), 0) }}"
  - delay: "{{ remaining_minutes * 60 }}"
  - condition: template
    value_template: "{{ is_state(door_sensor, 'on') }}"
  - parallel:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ send_second_phone }}"
            sequence:
              - device_id: !input mobile_device
                domain: mobile_app
                type: notify
                title: "{{ title_second }}"
                message: "{{ msg_second }}"
                data:
                  actions:
                    - action: "CLOSE_{{ door_sensor }}"
                      title: "{{ close_button_label }}"
        default: []

      - choose:
          - conditions:
              - condition: template
                value_template: "{{ send_second_alexa }}"
            sequence:
              - service: notify.alexa_media
                data:
                  target: !input alexa_target
                  message: "{{ msg_second }}"
                  data:
                    type: announce
        default: []
        
